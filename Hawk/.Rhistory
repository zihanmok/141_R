lines(sf_border$x,sf_border$y)
SFdata$longF
SFdata$latF
SFdata
SF_agg<-aggregate(price~latF+longF,SFdata,
function(x)c(mean(x),length(x)),drop=FALSE)
SF_agg
SFhouse_prices
SFhouse_prices[SFhouse_prices==0]<-NA
SFhouse_prices
SFhouse_sales<-matrix(SF_agg$price[,2],
nlevels(SFdata$longF),
nlevels(SFdata$latF),byrow=TRUE)
SFhouse_sales[SFhouse_sales==0]<-NA
#
sf_border=map('county','california,san francisco',plot = F)
#
sf_border=map('county','california,san francisco',plot = F)
image(x=long_seq,y=lat_seq,z=SFhouse_prices,xlim=c(-122.56,-122.3),
ylim = c(37.7,37.82),
xlab = "Longitude", ylab = "Latitude",
main = "SF Heatmap of Average Housing Prices")
lines(sf_border$x,sf_border$y)
image(x=long_seq,y=lat_seq,z=SFhouse_sales,xlim=c(-122.56,-122.3),
ylim = c(37.7,37.82),
xlab = "Longitude", ylab = "Latitude",
main = "SF Heatmap of Housing Sales")
lines(sf_border$x,sf_border$y)
data=readRDS('housing.rds')
library(dplyr)
library(lubridate)
library(ggplot2)
library(MASS)
library(treemap)
library(tidyr)
```{r echo=FALSE}
data<-readRDS('housing.rds')
library(dplyr)
library(lubridate)
library(ggplot2)
library(MASS)
library(maps)
library(treemap)
data<-mutate(data,yr=year(data$date),mon=month(data$date))
ggplot(data=data, aes(y=price,x=mon,group=yr,color=yr))+
stat_summary(fun.y = "mean", geom = "line")+
xlab("month")+ylab("avg_housing_price")+labs(color="year")+
ggtitle("avg_price over time")+theme_classic()
ggplot(data=data, aes(as.numeric(mon)))+
geom_freqpoly(bins=10000)+scale_x_continuous(breaks=seq(0,12,1))+
facet_wrap(~yr)+xlab("month")+ylab("sales")+
ggtitle("sales over time")+theme_classic()
library(ggplot2)
shuffle<-function(){
x<-1:16
sample(x,length(x))
}
cards_arrange<-function(x){
x<-c(x[-1],x[1])
return(x)
}
simulate_monopoly<-function(n,d){
CC_position<-c(2,17,33)
CC_instruction<-c(0,10)
CH_position<-c(7,22,36)
CH_instruction1<-c(0,10,11,24,39,5)
CH_instruction2<-NA
CH_instruction2[CH_position]<-c(15,25,5)
CH_instruction3<-NA
CH_instruction3[CH_position]<-c(12,28,12)
CC_cards<-shuffle()
CH_cards<-shuffle()
pos=0
result<-numeric()
result[1]<-0
dice1<-sample(d,n,replace = T)
dice2<-sample(d,n,replace = T)
roll = dice1+dice2
double=dice1==dice2
counter=0
for (i in 1:n){
pos= pos + roll[i]
if(pos>39){
pos=pos%%40
}
if(double[i]==T){
counter=counter+1
}else{
counter=0
}
if(i>2&counter==3){
pos=10
counter=0
}else{
counter=counter
}
if(pos %in% CC_position){
CC_card=CC_cards[1]
CC_cards=cards_arrange(CC_cards)
if (CC_card == 1 | CC_card == 2){
pos=CC_instruction[CC_card]
}else{
pos=pos
}
}
if(pos %in% CH_position){
CH_card=CH_cards[1]
CH_cards=cards_arrange(CH_cards)
if(CH_card %in% c(1:6)){
pos=CH_instruction1[CH_card]
}else if(CH_card == 7|CH_card==8){
pos=CH_instruction2[pos]
}else if(CH_card==9){
pos=CH_instruction3[pos]
}else if(CH_card == 10){
pos=pos-3
if (pos == 33){
CC_card=CC_cards[1]
if(CC_card==1|CC_card==2){
pos=CC_instruction[CC_card]
}else{
pos=pos
}
}
}
}
if(pos == 30){
pos=10
}
result[i+1]<-pos
}
return(factor(result,0:39))
}
estimate_monopoly<-function(n,d){
prob<-sort(prop.table(table(simulate_monopoly(n,d))),decreasing = T)
return(prob)
}
dice3<-estimate_monopoly(10000,3)
dice4<-estimate_monopoly(10000,4)
dice5<-estimate_monopoly(10000,5)
dice6<-estimate_monopoly(10000,6)
dices<-c(dice3,dice4,dice5,dice6)
dice3<-data.frame(dice3)
dice4<-data.frame(dice4)
dice5<-data.frame(dice5)
dice6<-data.frame(dice6)
dice3$dice<-3
dice4$dice<-4
dice5$dice<-5
dice6$dice<-6
prob<-rbind(dice3,dice4,dice5,dice6)
colnames(prob)[1]<-'pos'
prob$dice<-as.factor(prob$dice)
ggplot(prob,aes(x=pos,y=Freq,color=dice))+
geom_line(aes(group=dice))+ylab("probability")+
ggtitle("Long-term probabilities on each pos")+
theme_classic()
simulate_monopoly2<-function(n,d,p,r){
CC_position<-c(2,17,33)
CC_instruction<-c(0,10)
CH_position<-c(7,22,36)
CH_instruction1<-c(0,10,11,24,39,5)
CH_instruction2<-NA
CH_instruction2[CH_position]<-c(15,25,5)
CH_instruction3<-NA
CH_instruction3[CH_position]<-c(12,28,12)
p_instruction<-NA
p_instruction[p]<-r
CC_cards<-shuffle()
CH_cards<-shuffle()
pos = 0
result<-numeric()
wealth<-numeric()
result[1]<-0
wealth[1]<-0
dice1<-sample(d,n,replace = T)
dice2<-sample(d,n,replace = T)
roll = dice1+dice2
double=dice1==dice2
counter=0
for (i in 1:n){
money = 0
Go = F
Jail = F
pos= pos + roll[i]
if(pos>39){
Go=T
pos=pos%%40
}
if(double[i]==T){
counter=counter+1
}else{
counter=0
}
if(i>2&counter==3){
pos=10
counter=0
}else{
counter=counter
}
if(pos %in% CC_position){
CC_card=CC_cards[1]
CC_cards=cards_arrange(CC_cards)
if (CC_card == 1 | CC_card == 2){
pos=CC_instruction[CC_card]
}else{
pos=pos
}
}
if(pos %in% CH_position){
CH_card=CH_cards[1]
CH_cards=cards_arrange(CH_cards)
if(CH_card %in% c(1:6)){
pos=CH_instruction1[CH_card]
}else if(CH_card == 7|CH_card==8){
pos=CH_instruction2[pos]
}else if(CH_card==9){
pos=CH_instruction3[pos]
}else if(CH_card == 10){
pos=pos-3
if (pos == 33){
CC_card=CC_cards[1]
if(CC_card==1|CC_card==2){
pos=CC_instruction[CC_card]
}else{
pos=pos
}
}
}
}
if(pos == 30){
pos=10
}
if(pos == 10){
Jail=T
}
if(pos==4){
money = money-200
}else if(pos==38){
money=money-100
}
if(pos%in%p){
money=money-p_instruction[pos]
}
if(Go==T&Jail==F){
money=money+200
}
result[i+1]<-pos
wealth[i+1]<-money
}
a<-cbind(result,wealth)
return(data.frame(a))
}
property<-read.csv('properties.csv')
data=readRDS('housing.rds')
library(dplyr)
library(lubridate)
library(ggplot2)
library(MASS)
library(treemap)
library(tidyr)
library(maps)
#Q1
data<-tbl_df(data)
data$county
data=readRDS('housing.rds')
library(dplyr)
library(lubridate)
library(ggplot2)
library(MASS)
library(treemap)
library(tidyr)
library(maps)
#Q1
data<-tbl_df(data)
glimpse(data)
ggplot()+
borders(loc)
ggplot()+
borders(loc)
library(ggplot2)
library(ggmap)
library(lubridate)
library(geosphere)
ggplot()+
borders(loc)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
#Q1
data$tag<-as.factor(data$tag)
data<-read.csv('the_hawks.csv')
setwd("D:/R/141A/141_R/Hawk")
data<-read.csv('the_hawks.csv')
str(data)
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
ggplot()+
borders(loc)
View(loc)
ggplot()+
borders(loc,x=lat,y=long)
ggplot()+
borders(loc[,c(1,2)])
ggplot()+
borders(loc[,c(1,2)])
ggplot()+
borders(loc[c(1,2)])
loc[c(1,2)]
ggplot() +  geom_polygon(data=loc, aes(x=long, y=lat, group=group))
ggplot() +  geom_polygon(data=loc, aes(x=long, y=lat))
arrival1 <- subset(arrival, tag == '105936')
arrival2 <- subset(arrival, tag == '105928')
#Q2
arrival <- subset(data, stage=="arrival")
arrival1 <- subset(arrival, tag == '105936')
arrival2 <- subset(arrival, tag == '105928')
loch1<-arrival1[,c(3,4)]
loch2<-arrival2[,c(3,4)]
L<-cbind(loch1$long,loch1$lat)
L2<-cbind(L[-nrow(L),],L[-1,])
colnames(L2)<-c("long1","lat1","long2","lat2")
L2<-data.frame(L2)
map2<-get_map(loch1,zoom=15,scale = 2)
ggmap(map2)+geom_point(data=arrival1, aes(x=long,y=lat,size=height,color=speed))+
geom_segment(data=L2,aes(x=long1,y=lat1,xend=long2,yend=lat2),
arrow = arrow())+
ggtitle("hawk105936")+xlab('Longitude')+ylab('Latitude')
L3<-cbind(loch2$long,loch2$lat)
L4<-cbind(L3[-nrow(L3),],L3[-1,])
colnames(L4)<-c("long1","lat1","long2","lat2")
L4<-data.frame(L4)
map3<-get_map(loch2,zoom=15)
ggmap(map3)+geom_point(data=arrival2, aes(x=long,y=lat,size=height,color=speed))+
geom_segment(data=L4,aes(x=long1,y=lat1,xend=long2,yend=lat2),
arrow = arrow())+
ggtitle("hawk105928")+xlab('Longitude')+ylab('Latitude')
#Q3
data$time<-mdy_hm(data$time)
hawks<-split(data,tag)
nestlong<-aggregate(long~tag,data,mean)
nestlat<-aggregate(lat~tag,data,mean)
nests<-merge(nestlong,nestlat,by="tag")
levels(data$tag)
hawk1loc<-cbind(hawks[[1]]$long,hawks[[1]]$lat)
hawk1nest<-nests[1,c(2,3)]
dist1<-distGeo(hawk1loc,hawk1nest)
dist1<-data.frame(dist1)
dist1<-cbind(dist1,hawks[[1]])
ggplot(aes(x = mdy_hm(time), y = dist1/1609), data = dist1) +
geom_point()+geom_line()+
geom_hline(yintercept = 7.5,color = "blue", size=1,lty="dashed")+
ggtitle("hawk105923")+xlab('date')+ylab('Distance(mile)')+
theme_bw()
hawk2loc<-cbind(hawks[[2]]$long,hawks[[2]]$lat)
hawk2nest<-nests[2,c(2,3)]
dist2<-distGeo(hawk2loc,hawk2nest)
dist2<-data.frame(dist2)
dist2<-cbind(dist2,hawks[[2]])
ggplot(aes(x = mdy_hm(time), y = dist2/1609), data = dist2) +
geom_point()+geom_line()+
geom_hline(yintercept = 7.5,color = "blue", size=1,lty="dashed")+
ggtitle("hawk105928")+xlab('date')+ylab('Distance(mile)')
hawk3loc<-cbind(hawks[[3]]$long,hawks[[3]]$lat)
hawk3nest<-nests[3,c(2,3)]
dist3<-distGeo(hawk3loc,hawk3nest)
dist3<-data.frame(dist3)
dist3<-cbind(dist3,hawks[[3]])
ggplot(aes(x = mdy_hm(time), y = dist3/1609), data = dist3) +
geom_point()+geom_line()+
geom_hline(yintercept = 7.5,color = "blue", size=1,lty="dashed")+
ggtitle("hawk105930")+xlab('date')+ylab('Distance(mile)')
hawk4loc<-cbind(hawks[[4]]$long,hawks[[4]]$lat)
hawk4nest<-nests[4,c(2,3)]
dist4<-distGeo(hawk4loc,hawk4nest)
dist4<-data.frame(dist4)
dist4<-cbind(dist4,hawks[[4]])
ggplot(aes(x = mdy_hm(time), y = dist4/1609), data = dist4) +
geom_point()+geom_line()+
geom_hline(yintercept = 7.5,color = "blue", size=1,lty="dashed")+
ggtitle("hawk105936")+xlab('date')+ylab('Distance(mile)')
hawk5loc<-cbind(hawks[[5]]$long,hawks[[5]]$lat)
hawk5nest<-nests[5,c(2,3)]
dist5<-distGeo(hawk5loc,hawk5nest)
dist5<-data.frame(dist5)
dist5<-cbind(dist5,hawks[[5]])
ggplot(aes(x = mdy_hm(time), y = dist5/1609), data = dist5) +
geom_point()+geom_line()+
geom_hline(yintercept = 7.5,color = "blue", size=1,lty="dashed")+
ggtitle("hawk117527")+xlab('date')+ylab('Distance(mile)')
#Q4
departure <- subset(data, stage=="preMigration")
table(departure$tag)
#departure sequence location of hawk 105928
departure1 <- subset(arrival, tag == '105928')
dloc1<-departure1[,c(3,4)]
L41<-cbind(dloc1$long,dloc1$lat)
L42<-cbind(L41[-nrow(L41),],L41[-1,])
colnames(L42)<-c("long1","lat1","long2","lat2")
L42<-data.frame(L42)
#departure sequence of hawk 105928
map4<-get_map(dloc1,zoom=15,scale = 2)
ggmap(map4)+geom_point(data=departure1, aes(x=long,y=lat,
size=height,color=time,alpha=speed))+
geom_segment(data=L42,aes(x=long1,y=lat1,xend=long2,yend=lat2),
arrow = arrow())+
ggtitle("hawk105928")+xlab('Longitude')+ylab('Latitude')
#departure sequence location of hawk 105936
departure2 <- subset(arrival, tag == '105936')
dloc2<-departure2[,c(3,4)]
L43<-cbind(dloc2$long,dloc2$lat)
L44<-cbind(L43[-nrow(L43),],L43[-1,])
colnames(L44)<-c("long1","lat1","long2","lat2")
L44<-data.frame(L44)
#departure sequence of hawk 105936
map5<-get_map(dloc2,zoom=15,scale=2)
ggmap(map5)+geom_point(data=departure2, aes(x=long,y=lat,
size=height,color=time,alpha=speed))+
geom_segment(data=L44,aes(x=long1,y=lat1,xend=long2,yend=lat2),
arrow = arrow())+
ggtitle("hawk1059236")+xlab('Longitude')+ylab('Latitude')
borders(loc)
data<-read.csv('the_hawks.csv')
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
range(data$long)
borders(loc)
library(ggplot2)
library(ggmap)
library(geosphere)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
data<-read.csv('the_hawks.csv')
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
range(data$long)
data<-read.csv('the_hawks.csv')
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
range(data$long)
#Q2
arrival <- subset(data, stage=="arrival")
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
range(data$long)
data<-read.csv('the_hawks.csv')
library(ggplot2)
library(ggmap)
library(geosphere)
library(lubridate)
#Q1
data$tag<-as.factor(data$tag)
levels(data$tag) #check for different tag
loc<-subset(data[,c(3,4)])
map<-get_map(loc,maptype = 'toner',zoom=9,source="stamen",scale=1)
ggmap(map)+geom_jitter(data = data,
aes(x=long,y=lat,color=tag,size=0.5,alpha=.5))+
ggtitle("Hawks Location")+xlab('Longitude')+ylab('Latitude')
range(data$long)
#Q2
arrival <- subset(data, stage=="arrival")
